we required node.js for npm which is node package manager used to install packages/frameworks, also for npx which is node
package executer it is used to execute the package instead of installing it saves our space, another is yarn similar to npm

• reactJs is library/frameworks of node.js generally used for creating single page applications, for creating a react applications
  the basic command which we use is npx create-react-app appname, one limitation is appname should contain only lowercase
  characters, also it is not necessary to use react in this way we can also directly implement it but it is better to use
  the feature as it saves our lot of time
  npx create-react-app appname ; method initializes working directories and import all the necessary files/ packages.

• while creating a react app, we will alter only public and src folder, there is no need to change or alter other files
  difference b/w props and state;  Props are used to pass data from one component to another. The state is a local data 
  storage that is local to the component only and cannot be passed to other components.

• We create react app using multiple components, basically splitting a webpage into multiple parts/components which can be
  used for other projects also.
  in react we use jsx instead of ordinary js, jsx is extended version of HTML in which we can implement JavaScript directly
  by some minor syntax changes -:
  jsx is basically html in which we can write Ja vaScript inside {} curly barackets
  - HTML class is replaced by className in jsx as class keyword is reserved for JS classes
  - similarly HTML for parameter is replaced by htmlFor as for is reserved for loop in JS
  - also HTML index for tags is replaced by tagIndex here.
  - in jsx every tag is needed to be closed, even singleton tags also they are closed as <tagname/>
  - for including inline css we have to style a object and to that object also have to pass a object, in simple language
    style{{css}}, also properties are paased as object only and name also vary refer react documentation site for updated property 
    names also see basics file for example.
  - jsx code while returning through a components need to be wrapped in a single container, it can not have multiple primary containers
    , for preventing error we can wrapp our code in <>jsx code</> 
  by making these changes we can include bootstrap in our projects also.
  there are also many safety features in JavaScript, which helps to prevent common errors, one such is while declaring a 
  normal js variable if we include html tags in it, and then include this variable in our jsx, then those tags will have
  no effect, we can change this setting as per requirement

• we run the react file using npm run start / npm start in same directory of reactapp, it will create a local host for our
  app for us to run it in our environment, by default it opens the app in the default browser of the system which we can 
  change(refer internet for it), another noting point every time running npm start inc. the disk space as it recreates 
  dependencies
  npm run start/ npm start ; runs a development server
  if we accidently deletes the node_modules folder from our project we can reinstall in using command npm install
  for creating a production build we run command npm run build

# COMPONENTS
  components are the subparts of a project which we create seprately and merges in the main document, it inc. reusability
  in react there are two types of components class based and function based, function based components are latest and much
  easy to use and implement then class based components, as easy syntax and understanding, in function based components
  we just return jsx code in a function
  component name should start with uppercase in react

# EXPORTS (JavaScript feature)
   there are 2 types of exports in react one is normal export other is default export, refer basic.js and index.js for 
   example and better understanding, basic simple diff is in normal export we export elements as object elements and
   while importing name should exactly match as declared name in file, in default export any name can be used for importing

# PROPS & PROPTYPES
  have to import both from libraries before using
  props stands for properties which we include in our function component like a parameter, props are basics of including
  user defined parameters in a component (refer firstapp navbar), we can create parameters using props in our jsx and call
  these parameters while rendering component
  default props refers to default values of these prop parameters, if user forgot to enter parameters then these will rendering
  isRequired keyword makes it necessary for user to paas that prop parameter while rendering, if user fails do so and also
  no default prop is defined error will be raised visible in console
  proptypes is used to define types of our props, if type of entered prop parameter and defined proptype donot matches
  then error will be raised visible in console

# HOOKS & STATES
  Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class.
  useState is the first “Hook”, Hooks helps us to use class features without creating a class
  Hooks are functions that let you “hook into” React state and lifecycle features from function components. Hooks don’t 
  work inside classes — they let you use React without classes
  refer textform.js for example as we created a small app for converting entered text to uppercase without reloading page
  refer react documentation for better understanding of features

we can use setInterval of JavaScript to create annoying and repetedily poping advertisments, title changing etc.

$$ THE MAIN DIFFERENCE BETWEEN STATE AND PROP IS, WE USE PROP WHEN WE NOW FOR A PARTICULAR COMPONENT THAT ELEMENT WILL REMAIN
   SAME AND STATE IS USED WHEN THAT ELEMENT STATE NEEDS TO BE CHANGE CONTINUOSLY
   we can change state using props, but props are read only so not possible to change it

# REACT ROUTER
  react router is used to fetch components from server, as it is better to change only the required component than updating
  the whole site, this will improve user experience, like in Youtube if we go from Music section to Games section only
  the centre content is changing rest side bar nav bar search bar is not changing
  page donot reload on just updating the component using react router
  
  refer site for how to use and documentation  https://v5.reactrouter.com/web/guides/quick-start  this is old documentation
  https://reactrouter.com/en/v6.3.0/upgrading/v5  for any error refer internet and this link is update docs
  It is a seprate package needed to be installed using npm install react-router-dom, we have to run npm start again
  then have to import all imp elements import {BrowserRouter as Router, Routes, Route, Link} from "react-router-dom";  //importing react router files
  
  we can replace anchor tag <a> with <Link> which is router element, it will help us to move to page without reloading
  and instead of "href" here we have to use "to"

  exact- keyword is used for exact matching in Route path else by default matching is partial, in partial matching
  /users & /users/home will get match but will not match if using exact, so it is a good practice to use it

# DEVELOPMENT SERVER, BUILD SERVER, DEPLOYMENT OF SITE ON SERVER
https://create-react-app.dev/docs/deployment/   refer site for deployment related queries
  when we use npm start it creates a development server on which we make our changes, and updates our packages
  npm run build creates a fully developed project (build folder), it creates a static application in which we can't make
  changes we can run this build site (index.html) now directly, or use live server
  build folder is the folder which we host on servers, as it is compressed and use less internet for a user to fetch
  then hosting development server also, if large no. of users visit build site it will cost less to the owner as
  less data is send from server less rates and all.
  While Hosting on github pages (free hosting), we should avoid hosting sites created using react-router-dom refer github pages
  link of main link provided above  https://create-react-app.dev/docs/deployment/#github-pages  solution to this problem
  is also mentioned here
  some changes which we need to do for production site refer https://youtu.be/kEvfVw5Sq5c?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt&t=1035
  from current time how to solve the problem

•filter function, used in firstapp textform
(method) Array<string>.filter(predicate: (value: string, index: number, array: string[]) => unknown, thisArg?: any): string[] (+1 overload)
Returns the elements of an array that meet the condition specified in a callback function.
— A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.

• A website should have as low content shifting as possible refer firstapp alert for example
• onclick function requires function, not function call, so use arrow function in such cases

#CLASS BASED COMPONENTS
in class based components this keyword is used for referencing to class elements
• this.props is used to create props object, this.state is used for creating state object
• props in classes are used using destructuring of javascript we declare props as {var1, var2, --}= this.props , pulling
  data from props object
• evertime creating a constructor call super class/function to prevent error, empty constructor raises errors
• this.setState is used for setting a state as we cannot directly set a state
• proptypes and default props here are defined using static keyword
33